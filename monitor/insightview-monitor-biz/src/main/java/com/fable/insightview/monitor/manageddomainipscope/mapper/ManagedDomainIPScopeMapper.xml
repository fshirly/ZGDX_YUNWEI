<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.fable.insightview.monitor.manageddomainipscope.mapper.ManagedDomainIPScopeMapper">
	<resultMap id="DomainIPScopeMap" type="domainIPScope">
		<id column="ScopeID" property="scopeID" jdbcType="INTEGER" />
		<result column="ScopeType " property="scopeType " jdbcType="INTEGER" />
		<result column="DomainID" property="domainID" jdbcType="INTEGER" />
		<result column="IP1" property="ip1" jdbcType="VARCHAR" />
		<result column="IP2" property="ip2" jdbcType="VARCHAR" />
		<result column="Status" property="status" jdbcType="INTEGER" />
	</resultMap>

	<select id="getDomainIpScopeList" resultType="hashmap" resultMap="DomainIPScopeMap" parameterType="page">
		select ipScope.*,d.DomainName,d.DomainDescr
		from SysManagedDomainIPScope ipScope
		left join SysManagedDomain d on ipScope.DomainID = d.DomainID
		where 1=1
		<if test="params.ip1 !='' and params.ip1 != null ">
			 and ipScope.IP1 like ${concat("'%'","'"+params.ip1+"'","'%'")}
		</if>
		<if test="params.ip2 !='' and params.ip2 != null ">
			 and ipScope.IP2 like ${concat("'%'","'"+params.ip2+"'","'%'")}
		</if>
		<if test="params.domainID !='' and params.domainID != null and params.domainID != -1">
			 and (ipScope.DomainID =#{params.domainID} or d.ParentID=#{params.domainID})
		</if>
		<if test="params.scopeType !='' and params.scopeType != null and params.scopeType != -1">
			 and ipScope.ScopeType =#{params.scopeType} 
		</if>
		<if test="params.node !='' and params.node != null and params.node != '-1'">
			 and (ipScope.DomainID in (${params.node}) or d.ParentID in (${params.node}))
		</if>
		order by ipScope.ScopeID desc
	</select>
	
	<select id="getDomainIpScopeInfo" parameterType="Integer" resultType="domainIPScope">
		select ipScope.*,d.DomainName,d.DomainDescr
		from SysManagedDomainIPScope ipScope
		left join SysManagedDomain d on ipScope.DomainID = d.DomainID
		where ipScope.ScopeID=#{scopeID}
	</select>
	
	<insert id="insertDomainIpScope" parameterType="domainIPScope">
	insert into SysManagedDomainIPScope (ScopeID,DomainID,ScopeType,
			IP1,IP2,Status)
	values (#{scopeID,jdbcType=INTEGER},#{domainID,jdbcType=INTEGER},
			#{scopeType,jdbcType=INTEGER},#{ip1,jdbcType=VARCHAR},
			#{ip2,jdbcType=VARCHAR},#{status,jdbcType=INTEGER}
      )
	</insert>
	
	<update id="updateDomainIpScope" parameterType="domainIPScope">
	update SysManagedDomainIPScope 
	  <set>
		<if test="scopeType != null">
			ScopeType = #{scopeType,jdbcType=INTEGER},
	    </if>
	    <if test="domainID != null">
			DomainID = #{domainID,jdbcType=INTEGER},
	    </if>
	    <if test="ip1 != null">
			IP1 = #{ip1,jdbcType=VARCHAR},
	    </if>
	    <if test="ip2 != null">
			IP2 = #{ip2,jdbcType=VARCHAR},
	    </if>
	    <if test="status != null">
			Status = #{status,jdbcType=INTEGER},
	    </if>
	  </set>
	where ScopeID=#{scopeID}
	</update>
	
	<delete id="delDomainIpScope">
	delete from SysManagedDomainIPScope where ScopeID in(${scopeIDs})
	</delete>
	
	<select id="getByInfo" parameterType="domainIPScope" resultType="Integer">
	select count(*) from SysManagedDomainIPScope 
	where IP1 = #{ip1} and IP2 = #{ip2} and ScopeType = #{scopeType} and DomainID = #{domainID}
	</select>
	
	<select id="getByInfo2" parameterType="domainIPScope" resultType="Integer">
	select count(*) from SysManagedDomainIPScope 
	where IP1 = #{ip1} and IP2 = #{ip2} and ScopeType = #{scopeType} and DomainID = #{domainID} and ScopeID!=#{scopeID}
	</select>
	
	<select id="getScopesByDomainIds" parameterType="hashmap" resultType="domainIPScope">
	select * from SysManagedDomainIPScope where DomainID in 
	<foreach collection="list" item="domainIds"  open="(" separator="," close=")">
     #{domainIds}
    </foreach>
	</select>
</mapper>

